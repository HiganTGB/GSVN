input {
  jdbc {
    jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
    jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
    jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
    jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
    jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
    schedule => "*/30"
 schedule => "*/30"
       statement => "SELECT
                       spu.spu_id,
                       spu.spu_title,
                       spu.spu_description,
                       spu.spu_type,
                       spu.start_order,
                       spu.end_order,
                       spu.category_id,
                       spu.fandom_id,
                       spu.brand_id,
                       spu.status,
                       spu.sort,
                       spu.is_deleted,
                       spu.spu_attrs,
                       spu.created_at,
                       spu.updated_at,
                       spu.version,
                       MIN(sku.sku_price) AS lowest_sku_price
                     FROM product.spu
                     LEFT JOIN product.spu_sku ON spu.spu_id = spu_sku.spu_id
                     LEFT JOIN product.sku ON spu_sku.sku_id = sku.sku_id
                     WHERE spu.is_deleted = 0 AND sku.is_deleted = 0
                     GROUP BY spu.spu_id"
       jdbc_paging_enabled => true
       jdbc_page_size => 10000

       schedule => "0 23 * * *" #
     }
   }

   filter {
       mutate {
         rename => {
           "spu_title" => "title"
           "spu_description" => "description"
           "spu_type" => "type"
           "start_order" => "start_order_raw"
           "end_order" => "end_order_raw"
           "category_id" => "category_id"
           "fandom_id" => "fandom_id"
           "brand_id" => "brand_id"
           "status" => "status"
           "sort" => "sort"
           "is_deleted" => "is_deleted"
           "spu_attrs" => "attrs"
           "lowest_sku_price" => "lowest_price"
           "created_at" => "created_at_raw"
           "updated_at" => "updated_at_raw"
           "version" => "version"
         }
       }
       date {
         match => [ "start_order_raw", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd" ]
         target => "start_order"
         remove_field => [ "start_order_raw" ]
       }
       date {
         match => [ "end_order_raw", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd" ]
         target => "end_order"
         remove_field => [ "end_order_raw" ]
       }
       date {
         match => [ "created_at_raw", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd" ]
         target => "created_at"
         remove_field => [ "created_at_raw" ]
       }
       date {
         match => [ "updated_at_raw", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd" ]
         target => "updated_at"
         remove_field => [ "updated_at_raw" ]
       }
   }
output {
  stdout { codec => json_lines }
  elasticsearch {
  hosts => [ "http://elastic:9200" ]
  user => "elastic"
  password => "myelasticpass"
  index => "product"
  document_id => "%{[id]}"
}