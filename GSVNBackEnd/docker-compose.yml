
services:
  gsvnbackend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gsvnbackend
    ports:
      - "9002:9002"
    depends_on:
      - mysql-db
      - rabbitmq
      - minio
      - redis
      - mongodb
      - elastic
    networks:
        - gsvn-network
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB: MYSQL
      DB_URL_HOST: mysql-db
      DB_SCHEMA: keycloak
      DB_USERNAME: keycloak
      DB_PASSWORD: keycloak
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      - mysql-db
    networks:
      - gsvn-network
    command:
      - "start-dev"
  mysql-db:
    container_name: mysql-db
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gmvn
      MYSQL_USER: higan
      MYSQL_PASSWORD: passpass
      MYSQL_TCP_PORT: 3306 # Standard MySQL port
    ports:
      - "3306:3306"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d #scripts sql docker
      - mysql_data:/var/lib/mysql # Persist data
    expose:
      - 3306
    networks:
      - gsvn-network
  elastic:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - ELASTIC_PASSWORD=myelasticpass
      - KIBANA_PASSWORD=kibanapass
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    volumes:
      - ./elk/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - gsvn-network
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.12.2
    volumes:
      - ./elk/logstash/logstash-log.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=myelasticpass
      - ELASTIC_HOSTS=http://elastic:9200
    depends_on:
      - elastic
    networks:
      - gsvn-network
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: kibanapass
    ports:
      - "5601:5601"
    depends_on:
      - elastic
    networks:
      - gsvn-network
  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:8.12.2
    user: root
    volumes:
      - ./elk/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/var/log/server
    networks:
      - gsvn-network
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage:/data
    environment:
      MINIO_ROOT_USER: gmvnhiganadmin
      MINIO_ROOT_PASSWORD: gmvnhiganadmin
    command: server --console-address ":9001" /data
    networks:
      - gsvn-network
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis # Please check this path for typos
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf # Please check this path
    environment:
      - REDIS_PASSWORD=admin
      - REDIS_PORT=6379
    networks:
      - gsvn-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rootadmin
      RABBITMQ_DEFAULT_PASS: rootadmin
    networks:
      - gsvn-network
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db # Persist MongoDB data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    networks:
      - gsvn-network
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_URL=mongodb:27017 # Use service name for internal communication
    depends_on:
      - mongodb
    networks:
      - gsvn-network

networks:
  gsvn-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local